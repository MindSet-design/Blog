@page "/posts"
@inject HttpClient Http

<PageTitle>Posts</PageTitle>
@if (Post == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container mt-5">
        <div class="row">
            <div class="col-lg-8">
                <header class="mb-4">
                    <!-- Post title-->
                    <h1 class="fw-bolder mb-1">@Title</h1>
                    <!-- Post Date-->
                    <div class="text-muted fst-italic mb-2">Posted on @Date</div>
                </header>
                <section class="mb-5">
                    <p class="fs-5 mb-4">@Body</p>
                </section>
            </div>
            <!--Post listing-->
            <div class="col-lg-4">
                <h4 class="text-decoration-underline">Posts</h4>
                <div class="row">
                    <div class="col-sm-6">
                        <ul class="list-unstyled mb-0">
                            @foreach (var Post in Post.Reverse())
                            {

                                <li> <button class="btn text-light" @onclick="args => updatepost(Post)">@Post.Title <p class="text-muted mb-0">@Post.Date.ToShortDateString()</p></button></li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private BlogPosts[]? Post;
    private string? Title;
    private string? Body;
    private string? Date;


    protected override async Task OnInitializedAsync()
    {
        Post = await Http.GetFromJsonAsync<BlogPosts[]>("blog-posts/posts.json");
        Title = Post.Last().Title;
        Body = Post.Last().Body;
        Date = Post.Last().Date.ToShortDateString();
    }

    private void updatepost(BlogPosts post)
    {
        Title = post.Title;
        Body = post.Body;
        Date = post.Date.ToShortDateString();
    }

    public class BlogPosts
    {
        public int Id { get; set; }

        public DateTime Date { get; set; }

        public string? Title { get; set; }

        public string? Body { get; set; }

    }
}